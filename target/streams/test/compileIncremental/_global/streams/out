[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 1 products, 1 sources, 6 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/FuzzyLogicDSLTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/test/scala/FuzzyLogicDSLTest.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/test-classes/FuzzyLogicDSLTest.class),Set(),API Changes: Set(NamesChange(FuzzyNumber$,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(FuzzyNumber,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(MULT,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(MULT,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(MULT;init;,[Default]))), NamesChange(XOR$,ModifiedNames(changes = UsedName(XOR,[Default]), UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(XOR;init;,[Default]))), NamesChange(Intersection$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(Intersection;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(Intersection,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyGateOperation,ModifiedNames(changes = UsedName(FuzzyGateOperation,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(AlphaCut$,ModifiedNames(changes = UsedName(alpha,[Default]), UsedName(AlphaCut;init;,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(AlphaCut,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(AddSets,ModifiedNames(changes = UsedName(AddSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(AddSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(AddSets$,ModifiedNames(changes = UsedName(AddSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(AddSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(XOR,ModifiedNames(changes = UsedName(XOR,[Default]), UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(XOR;init;,[Default]))), NamesChange(MultSets,ModifiedNames(changes = UsedName(MultSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(MultSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(XorSets,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(XorSets;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(XorSets,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(Complement,ModifiedNames(changes = UsedName(andThen,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Complement,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(Complement;init;,[Default]), UsedName(compose,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyString$,ModifiedNames(changes = UsedName(FuzzyString,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(FuzzyString,ModifiedNames(changes = UsedName(FuzzyString,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(Input$,ModifiedNames(changes = UsedName(Input,[Default]), UsedName(<init>$default$2,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$2,[Default]), UsedName(partialEvaluate,[Default]), UsedName(value,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(Input;init;,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]))), NamesChange(ADD$,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(ADD,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(ADD;init;,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(MULT$,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(MULT,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(MULT;init;,[Default]))), NamesChange(FuzzySetOperation,ModifiedNames(changes = UsedName(FuzzySetOperation,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(ADD,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(ADD,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(ADD;init;,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyLogicDSL$,ModifiedNames(changes = UsedName(AssignInput,[Default]), UsedName(AssignGate,[Default]), UsedName(CreateInstance,[Default]), UsedName(instanceScope,[Default]), UsedName(inputScope,[Default]), UsedName(Assign,[Default]), UsedName(Invoke,[Default]), UsedName(ScopeInstance,[Default]))), NamesChange(Intersection,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(Intersection;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(Intersection,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyNumber,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(FuzzyNumber,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(Union,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Union,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(Union;init;,[Default]))), NamesChange(Complement$,ModifiedNames(changes = UsedName(andThen,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Complement,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(Complement;init;,[Default]), UsedName(compose,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyOperation,ModifiedNames(changes = UsedName(FuzzyOperation,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(SetInput,ModifiedNames(changes = UsedName(partialEvaluate,[Default]), UsedName(SetInput,[Default]))), NamesChange(Union$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Union,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(Union;init;,[Default]))), NamesChange(CreateNew,ModifiedNames(changes = UsedName(instanceName,[Default]), UsedName(CreateNew,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(CreateNew;init;,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]))), NamesChange(AlphaCut,ModifiedNames(changes = UsedName(alpha,[Default]), UsedName(AlphaCut;init;,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(AlphaCut,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzySetValue,ModifiedNames(changes = UsedName(FuzzySetValue,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(FuzzySetValue$,ModifiedNames(changes = UsedName(FuzzySetValue,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(SetInput$,ModifiedNames(changes = UsedName(partialEvaluate,[Default]), UsedName(SetInput,[Default]))), NamesChange(MultSets$,ModifiedNames(changes = UsedName(MultSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(MultSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(XorSets$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(XorSets;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(XorSets,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyValue,ModifiedNames(changes = UsedName(FuzzyValue,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(Input,ModifiedNames(changes = UsedName(Input,[Default]), UsedName(<init>$default$2,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$2,[Default]), UsedName(partialEvaluate,[Default]), UsedName(value,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(Input;init;,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyNumber$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(equals,[Default]), UsedName(FuzzyNumber,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyNumber$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyNumber$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzyNumber][0m
[0m[[0m[0mdebug[0m] [0m[0mThe MULT has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(MULT,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(MULT;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) MULT: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) MULT.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, MULT][0m
[0m[[0m[0mdebug[0m] [0m[0mThe XOR$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(XOR,[Default]), UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(XOR;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) XOR$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) XOR$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [XOR, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Intersection$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(Intersection;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(Intersection,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Intersection$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Intersection$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [Intersection, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyGateOperation has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzyGateOperation,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyGateOperation: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyGateOperation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzyGateOperation][0m
[0m[[0m[0mdebug[0m] [0m[0mThe AlphaCut$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(alpha,[Default]), UsedName(AlphaCut;init;,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(AlphaCut,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) AlphaCut$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) AlphaCut$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, AlphaCut][0m
[0m[[0m[0mdebug[0m] [0m[0mThe AddSets has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(AddSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(AddSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) AddSets: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) AddSets.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [AddSets, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe AddSets$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(AddSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(AddSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) AddSets$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) AddSets$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [AddSets, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe XOR has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(XOR,[Default]), UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(XOR;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) XOR: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) XOR.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [XOR, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe MultSets has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MultSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(MultSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) MultSets: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) MultSets.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, MultSets][0m
[0m[[0m[0mdebug[0m] [0m[0mThe XorSets has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(XorSets;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(XorSets,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) XorSets: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) XorSets.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [XorSets, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Complement has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(andThen,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Complement,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(Complement;init;,[Default]), UsedName(compose,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Complement: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Complement.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, Complement][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyString$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzyString,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyString$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyString$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzyString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyString has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzyString,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyString: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyString.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzyString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Input$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Input,[Default]), UsedName(<init>$default$2,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$2,[Default]), UsedName(partialEvaluate,[Default]), UsedName(value,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(Input;init;,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Input$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Input$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply$default$2, Input, apply, value][0m
[0m[[0m[0mdebug[0m] [0m[0mThe ADD$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(ADD,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(ADD;init;,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) ADD$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) ADD$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, ADD][0m
[0m[[0m[0mdebug[0m] [0m[0mThe MULT$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(MULT,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(MULT;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) MULT$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) MULT$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, MULT][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzySetOperation has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzySetOperation,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzySetOperation: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzySetOperation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzySetOperation][0m
[0m[[0m[0mdebug[0m] [0m[0mThe ADD has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(ADD,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(ADD;init;,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) ADD: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) ADD.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, ADD][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyLogicDSL$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(AssignInput,[Default]), UsedName(AssignGate,[Default]), UsedName(CreateInstance,[Default]), UsedName(instanceScope,[Default]), UsedName(inputScope,[Default]), UsedName(Assign,[Default]), UsedName(Invoke,[Default]), UsedName(ScopeInstance,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyLogicDSL$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyLogicDSL$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [ScopeInstance, CreateInstance, Invoke][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Intersection has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(Intersection;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(Intersection,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Intersection: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Intersection.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [Intersection, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyNumber has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(equals,[Default]), UsedName(FuzzyNumber,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyNumber: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyNumber.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzyNumber][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Union has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Union,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(Union;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Union: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Union.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [Union, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Complement$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(andThen,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Complement,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(Complement;init;,[Default]), UsedName(compose,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Complement$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Complement$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, Complement][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyOperation has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzyOperation,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyOperation: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyOperation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzyOperation][0m
[0m[[0m[0mdebug[0m] [0m[0mThe SetInput has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(partialEvaluate,[Default]), UsedName(SetInput,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) SetInput: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) SetInput.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [SetInput][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Union$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Union,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(Union;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Union$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Union$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [Union, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe CreateNew has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(instanceName,[Default]), UsedName(CreateNew,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(CreateNew;init;,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) CreateNew: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) CreateNew.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, CreateNew][0m
[0m[[0m[0mdebug[0m] [0m[0mThe AlphaCut has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(alpha,[Default]), UsedName(AlphaCut;init;,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(AlphaCut,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) AlphaCut: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) AlphaCut.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, AlphaCut][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzySetValue has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzySetValue,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzySetValue: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzySetValue.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzySetValue][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzySetValue$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzySetValue,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzySetValue$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzySetValue$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzySetValue][0m
[0m[[0m[0mdebug[0m] [0m[0mThe SetInput$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(partialEvaluate,[Default]), UsedName(SetInput,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) SetInput$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) SetInput$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [SetInput][0m
[0m[[0m[0mdebug[0m] [0m[0mThe MultSets$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MultSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(MultSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) MultSets$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) MultSets$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply, MultSets][0m
[0m[[0m[0mdebug[0m] [0m[0mThe XorSets$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(XorSets;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(XorSets,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) XorSets$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) XorSets$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [XorSets, apply][0m
[0m[[0m[0mdebug[0m] [0m[0mThe FuzzyValue has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FuzzyValue,[Default]), UsedName(partialEvaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) FuzzyValue: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) FuzzyValue.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [FuzzyValue][0m
[0m[[0m[0mdebug[0m] [0m[0mThe Input has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Input,[Default]), UsedName(<init>$default$2,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$2,[Default]), UsedName(partialEvaluate,[Default]), UsedName(value,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(Input;init;,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Input: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Input.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of FuzzyLogicDSLTest: [apply$default$2, Input, apply, value][0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/test/scala/FuzzyLogicDSLTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/test-classes/FuzzyLogicDSLTest.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(FuzzyNumber$,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(FuzzyNumber,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(MULT,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(MULT,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(MULT;init;,[Default]))), NamesChange(XOR$,ModifiedNames(changes = UsedName(XOR,[Default]), UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(XOR;init;,[Default]))), NamesChange(Intersection$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(Intersection;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(Intersection,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyGateOperation,ModifiedNames(changes = UsedName(FuzzyGateOperation,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(AlphaCut$,ModifiedNames(changes = UsedName(alpha,[Default]), UsedName(AlphaCut;init;,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(AlphaCut,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(AddSets,ModifiedNames(changes = UsedName(AddSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(AddSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(AddSets$,ModifiedNames(changes = UsedName(AddSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(AddSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(XOR,ModifiedNames(changes = UsedName(XOR,[Default]), UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(XOR;init;,[Default]))), NamesChange(MultSets,ModifiedNames(changes = UsedName(MultSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(MultSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(XorSets,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(XorSets;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(XorSets,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(Complement,ModifiedNames(changes = UsedName(andThen,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Complement,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(Complement;init;,[Default]), UsedName(compose,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyString$,ModifiedNames(changes = UsedName(FuzzyString,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(FuzzyString,ModifiedNames(changes = UsedName(FuzzyString,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(Input$,ModifiedNames(changes = UsedName(Input,[Default]), UsedName(<init>$default$2,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$2,[Default]), UsedName(partialEvaluate,[Default]), UsedName(value,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(Input;init;,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]))), NamesChange(ADD$,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(ADD,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(ADD;init;,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(MULT$,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(MULT,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]), UsedName(MULT;init;,[Default]))), NamesChange(FuzzySetOperation,ModifiedNames(changes = UsedName(FuzzySetOperation,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(ADD,ModifiedNames(changes = UsedName(a,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(ADD,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(ADD;init;,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(b,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyLogicDSL$,ModifiedNames(changes = UsedName(AssignInput,[Default]), UsedName(AssignGate,[Default]), UsedName(CreateInstance,[Default]), UsedName(instanceScope,[Default]), UsedName(inputScope,[Default]), UsedName(Assign,[Default]), UsedName(Invoke,[Default]), UsedName(ScopeInstance,[Default]))), NamesChange(Intersection,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(Intersection;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(Intersection,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyNumber,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(FuzzyNumber,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(Union,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Union,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(Union;init;,[Default]))), NamesChange(Complement$,ModifiedNames(changes = UsedName(andThen,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Complement,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(Complement;init;,[Default]), UsedName(compose,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyOperation,ModifiedNames(changes = UsedName(FuzzyOperation,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(SetInput,ModifiedNames(changes = UsedName(partialEvaluate,[Default]), UsedName(SetInput,[Default]))), NamesChange(Union$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(Union,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(Union;init;,[Default]))), NamesChange(CreateNew,ModifiedNames(changes = UsedName(instanceName,[Default]), UsedName(CreateNew,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(partialEvaluate,[Default]), UsedName(CreateNew;init;,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]))), NamesChange(AlphaCut,ModifiedNames(changes = UsedName(alpha,[Default]), UsedName(AlphaCut;init;,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(AlphaCut,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzySetValue,ModifiedNames(changes = UsedName(FuzzySetValue,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(FuzzySetValue$,ModifiedNames(changes = UsedName(FuzzySetValue,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(SetInput$,ModifiedNames(changes = UsedName(partialEvaluate,[Default]), UsedName(SetInput,[Default]))), NamesChange(MultSets$,ModifiedNames(changes = UsedName(MultSets,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(MultSets;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(XorSets$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(XorSets;init;,[Default]), UsedName(setA,[Default]), UsedName(partialEvaluate,[Default]), UsedName(apply,[Default]), UsedName(XorSets,[Default]), UsedName(copy$default$2,[Default]), UsedName(setB,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]))), NamesChange(FuzzyValue,ModifiedNames(changes = UsedName(FuzzyValue,[Default]), UsedName(partialEvaluate,[Default]))), NamesChange(Input,ModifiedNames(changes = UsedName(Input,[Default]), UsedName(<init>$default$2,[Default]), UsedName(andThen,[Default]), UsedName(tupled,[Default]), UsedName(unapply,[Default]), UsedName(apply$default$2,[Default]), UsedName(partialEvaluate,[Default]), UsedName(value,[Default]), UsedName(apply,[Default]), UsedName(copy$default$2,[Default]), UsedName(Input;init;,[Default]), UsedName(compose,[Default]), UsedName(curried,[Default]), UsedName(copy,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(FuzzyLogicDSLTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/src/test/scala/FuzzyLogicDSLTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(FuzzyLogicDSLTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mall 1 sources are invalidated[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: FuzzyLogicDSLTest[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0 percent of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to D:\CS474-HW3\target\scala-2.13\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala2-sbt-bridge\2.13.14\scala2-sbt-bridge-2.13.14.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 5826ff0c for Scala compiler version 2.13.14[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\CS474-HW3\target\scala-2.13\test-classes;D:\CS474-HW3\target\scala-2.13\classes;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.14\scala-library-2.13.14.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_2.13\3.2.19\scalatest_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-core_2.13\3.2.19\scalatest-core_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-featurespec_2.13\3.2.19\scalatest-featurespec_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-flatspec_2.13\3.2.19\scalatest-flatspec_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-freespec_2.13\3.2.19\scalatest-freespec_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funsuite_2.13\3.2.19\scalatest-funsuite_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funspec_2.13\3.2.19\scalatest-funspec_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-propspec_2.13\3.2.19\scalatest-propspec_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-refspec_2.13\3.2.19\scalatest-refspec_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-wordspec_2.13\3.2.19\scalatest-wordspec_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-diagrams_2.13\3.2.19\scalatest-diagrams_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-matchers-core_2.13\3.2.19\scalatest-matchers-core_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-shouldmatchers_2.13\3.2.19\scalatest-shouldmatchers_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-mustmatchers_2.13\3.2.19\scalatest-mustmatchers_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.14\scala-reflect-2.13.14.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-compatible\3.2.19\scalatest-compatible-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_2.13\3.2.19\scalactic_2.13-3.2.19.jar;C:\Users\Holy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_2.13\2.1.0\scala-xml_2.13-2.1.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 5.1740504 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
